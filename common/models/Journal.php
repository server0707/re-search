<?php

namespace common\models;

use Faker\Core\File;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\web\UploadedFile;

/**
 * This is the model class for table "journal".
 *
 * @property int $id
 * @property string $name
 * @property int $pages_count
 * @property string $published
 * @property string $file_name
 * @property int|null $created_at
 * @property int|null $updated_at
 *
 * @property Article[] $articles
 */
class Journal extends \yii\db\ActiveRecord
{
    public $image;
    public $gallery;
    public $file;

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
            'image' => [
                'class' => 'rico\yii2images\behaviors\ImageBehave',
            ]
        ];
    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'journal';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'pages_count', 'published', 'file_name', 'file'], 'required'],
            [['pages_count', 'created_at', 'updated_at'], 'integer'],
            [['published'], 'date', 'format' => 'php:Y-m-d'],
            [['name', 'file_name'], 'string', 'max' => 255],
            [['name'], 'unique', 'targetAttribute' => ['name', 'published'], 'message' => 'Bunday nomli va ushbu sanadagi jurnal oldin bazaga qo\'shilgan!'],

            [['file'], 'file', 'extensions' => ['pdf'], 'maxFiles' => 1],

            [['image'], 'file', 'extensions' => ['png', 'jpg', 'jpeg']],
            [['gallery'], 'file', 'extensions' => ['png', 'jpg', 'jpeg'], 'maxFiles' => 5],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Nomi',
            'pages_count' => 'Varoqlar soni',
            'published' => 'Nashr sanasi',
            'file_name' => 'Fayl nomi',
            'file' => 'Fayl',
            'image' => 'Rasm',
            'gallery' => 'Galereya',
            'created_at' => 'Yaratilgan',
            'updated_at' => 'Yangilangan',
        ];
    }

    /**
     * Gets query for [[Articles]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getArticles()
    {
        return $this->hasMany(Article::className(), ['journal_id' => 'id']);
    }

    //  {----------------Image uploads BEGIN----------------}
    public function upload()
    {
        if ($this->validate()) {
            $path = Yii::getAlias('@webroot') . $this->image->baseName . '.' . $this->image->extension;
            $this->image->saveAs($path);
            $this->attachImage($path, true);
            @unlink($path);
            return true;
        } else {
            return false;
        }
    }

    public function uploadGallery()
    {
        if ($this->validate()) {
            foreach ($this->gallery as $file) {
                $path = Yii::getAlias('@webroot') . $file->baseName . '.' . $file->extension;
                $file->saveAs($path);
                $this->attachImage($path);
                @unlink($path);
            }
            return true;
        } else {
            return false;
        }
    }

    //  {----------------Image uploads END----------------}

    public function afterSave($insert, $changedAttributes)
    {
        //        rasm uchun begin
        if ($this->image = UploadedFile::getInstance($this, 'image')) {
            $this->upload();
        }
        unset($this->image);

        if ($this->gallery = UploadedFile::getInstances($this, 'gallery')) {
            $this->uploadGallery();
        }
        //        rasm uchun end

        //        PDF fayl uchun begin

        if (!empty($this->file)){
            $this->file->saveAs('@frontend/web/journals/' . $this->file_name);
        }

        //        PDF fayl uchun begin

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function beforeValidate()
    {
        if ($this->file = UploadedFile::getInstance($this, 'file')) {
            $this->removeFile();
            $this->file_name = $this->file->baseName . '_' . time() . '.' . $this->file->extension;
        }

        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public function afterDelete()
    {
        $this->removeImages();

        $this->removeFile();
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }

    private function removeFile(){
        \Yii::setAlias('@root', realpath(dirname(__FILE__).'/../../'));
        if (!is_dir(\Yii::getAlias('@root') . '/frontend/web/journals/' . $this->file_name) && file_exists(\Yii::getAlias('@root') . '/frontend/web/journals/' . $this->file_name)) {
            return unlink(\Yii::getAlias('@root') . '/frontend/web/journals/' . $this->file_name);
        }
    }
}
