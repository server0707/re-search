<?php

namespace common\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\web\UploadedFile;

/**
 * This is the model class for table "interactive_services".
 *
 * @property int $id
 * @property string $fullName
 * @property string $type
 * @property string $file_name
 * @property boolean $viewed
 * @property string $phone
 * @property string $verifyCode
 * @property int|null $created_at
 * @property int|null $updated_at
 */
class InteractiveServices extends \yii\db\ActiveRecord
{
    public $file;
    public $verifyCode;

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
        ];
    }
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'interactive_services';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['fullName', 'type', 'file_name', 'phone', 'file'], 'required'],
            [['created_at', 'updated_at'], 'integer'],
            [['fullName', 'type', 'file_name'], 'string', 'max' => 255],
            [['phone'], 'string', 'min' => 9, 'max' => 12],
            [['phone'], 'validatePhone'],
            [['viewed'], 'boolean'],
            [['viewed'], 'default', 'value' => false],

            ['verifyCode', 'captcha'],

            [['file'], 'file', 'extensions' => ['doc', 'docx'], 'maxFiles' => 1],

        ];
    }

    public function validatePhone($attribute, $params, $validator)
    {
        if (!(strlen($this->$attribute) == 9 || strlen($this->$attribute) == 12)) {
            $this->addError($attribute, 'Telefon raqam xato kiritilgan.');
        }
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'fullName' => 'F.I.O.',
            'type' => 'Tur',
            'file_name' => 'Fayl nomi',
            'file' => 'Fayl',
            'phone' => 'Telefon',
            'verifyCode' => 'Robot emaslik tekshiruvi',
            'viewed' => 'Ko\'rilgan',
            'created_at' => 'Yaratilgan',
            'updated_at' => 'Yangilangan',
        ];
    }

    public function afterSave($insert, $changedAttributes)
    {
        //        WORD fayl uchun begin
        if (!empty($this->file)){
            $this->file->saveAs('@frontend/web/uploads/services/' . $this->file_name);
        }
        //        WORD fayl uchun end

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function beforeValidate()
    {
        if ($this->file = UploadedFile::getInstance($this, 'file')) {
            $this->removeFile();
            $this->file_name = $this->file->baseName . '_' . time() . '.' . $this->file->extension;
        }

        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    private function removeFile(){
        \Yii::setAlias('@root', realpath(dirname(__FILE__).'/../../'));
        if (!is_dir(\Yii::getAlias('@root') . '/frontend/web/uploads/services/' . $this->file_name) && file_exists(\Yii::getAlias('@root') . '/frontend/web/uploads/services/' . $this->file_name)) {
            return unlink(\Yii::getAlias('@root') . '/frontend/web/uploads/services/' . $this->file_name);
        }
    }

    public function afterDelete()
    {
        $this->removeFile();
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }
}
